{"remainingRequest":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/babel-loader/lib/index.js!/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/vue-loader-v16/dist/templateLoader.js??ref--7!/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/src/layout/headers/components/driver/index.vue?vue&type=template&id=9f1f73a2","dependencies":[{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/src/layout/headers/components/driver/index.vue","mtime":1652526347000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/babel.config.js","mtime":1651423044000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IFsib25DbGljayJdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X3N2Z19pY29uID0gX3Jlc29sdmVDb21wb25lbnQoInN2Zy1pY29uIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgIGlkOiAiZ3VpZGUiLAogICAgb25DbGljazogX3dpdGhNb2RpZmllcnMoJHNldHVwLmhhbmRsZUd1aWRlLCBbInByZXZlbnQiLCAic3RvcCJdKQogIH0sIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9zdmdfaWNvbiwgewogICAgaWNvbjogImd1aWRlIgogIH0pXSwgOAogIC8qIFBST1BTICovCiAgLCBfaG9pc3RlZF8xKTsKfQ=="},{"version":3,"mappings":";;;;;uBACEA,oBAEM,KAFN,EAEM;IAFDC,EAAE,EAAC,OAEF;IAFWC,OAAK,iBAAeC,kBAAf,EAA0B,mBAA1B;EAEhB,CAFN,GACEC,aAAkCC,mBAAlC,EAAkC;IAAxBC,IAAI,EAAC;EAAmB,CAAlC,EADF;;EAAA","names":["_createElementBlock","id","onClick","$setup","_createVNode","_component_svg_icon","icon"],"sourceRoot":"","sources":["/Users/lixin/iCloud Drive（归档）/Documents/code/个人学习代码/vue3.2/src/layout/headers/components/driver/index.vue"],"sourcesContent":["<template>\r\n  <div id=\"guide\" @click.prevent.stop=\"handleGuide\">\r\n    <svg-icon icon=\"guide\"></svg-icon>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Driver from 'driver.js'\r\nimport 'driver.js/dist/driver.min.css'\r\nimport { onMounted } from 'vue'\r\nimport { steps } from './steps'\r\n// import { watchLang } from '@/i18n/watchlang'\r\nimport i18n from '@/i18n'\r\n// 引入I18N\r\nconst t = i18n.global.t\r\nlet driver\r\nonMounted(() => {\r\n  initDriver()\r\n})\r\n\r\n// 初始化driver\r\nconst initDriver = () => {\r\n  driver = new Driver({\r\n    animate: false, // Whether to animate or not\r\n    opacity: 0.75, // Background opacity (0 means only popovers and without overlay)\r\n    padding: 10, // Distance of element from around the edges\r\n    allowClose: true, // Whether the click on overlay should close or not\r\n    overlayClickNext: false, // Whether the click on overlay should move next\r\n    doneBtnText: t('driver.doneBtnText'), // Text on the final button\r\n    closeBtnText: t('driver.closeBtnText'), // Text on the close button for this step\r\n    stageBackground: '#ffffff', // Background color for the staged behind highlighted element\r\n    nextBtnText: t('driver.nextBtnText'), // Next button text for this step\r\n    prevBtnText: t('driver.prevBtnText') // Previous button text for this step\r\n  })\r\n}\r\n// watchLang(initDriver)\r\n\r\nconst handleGuide = () => {\r\n  driver.defineSteps(steps(t))\r\n  driver.start()\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]}]}